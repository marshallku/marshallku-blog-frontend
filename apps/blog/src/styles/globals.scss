@import "./abstracts/_palette.scss";
@import "./abstracts/_mixins.scss";

html {
    @each $key, $value in $light-palette {
        @if type-of($value) == "map" {
            @each $child-key, $child-value in $value {
                --palette-#{"" + $key}-#{"" + $child-key}: #{$child-value};
            }
        } @else {
            --palette-#{"" + $key}: #{$value};
        }
    }

    background-color: get-color($light-palette, background);
    color: get-color($light-palette, text);
}

html[data-theme="dark"] {
    @each $key, $value in $dark-palette {
        @if type-of($value) == "map" {
            @each $child-key, $child-value in $value {
                --palette-#{"" + $key}-#{"" + $child-key}: #{$child-value};
            }
        } @else {
            --palette-#{"" + $key}: #{$value};
        }
    }

    background-color: get-color($dark-palette, background);
    color: get-color($dark-palette, text);
}

html[data-theme="sepia"] {
    @each $key, $value in $sepia-palette {
        @if type-of($value) == "map" {
            @each $child-key, $child-value in $value {
                --palette-#{"" + $key}-#{"" + $child-key}: #{$child-value};
            }
        } @else {
            --palette-#{"" + $key}: #{$value};
        }
    }

    background-color: get-color($sepia-palette, background);
    color: get-color($sepia-palette, text);
}

body {
    display: flex;
    flex-direction: column;
}

a {
    text-decoration: none;
    color: color(text);

    @include supports-hover {
        &:hover {
            color: color(highlight);
        }
    }
}

a,
button {
    cursor: pointer;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}
